name: Deploy to EC2

on:
  push:
    branches: [dev]

  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: archive chalna beginner
        run: tar cvfz ./chalna-beginner.tar.gz

      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: upload to S3
        run: aws s3 cp --region ap-northeast-2 ./chalna-beginner.tar.gz s3://chalna-bucket/chalna_folder/

      - name: deploy with AWS codeDeploy
        run: aws deploy create-deployment
          --application-name chalna-beginner
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name chalna-group
          --s3-location bucket=chalna-bucket,bundleType=tgz,key=chalna_folder/chalna.tar.gz

#      - name: Upload artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: spring-boot-app
#          path: build/libs/*.jar
#
#      - name: Download artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: spring-boot-app
#          path: .
#
#      - name: Deploy to EC2
#        uses: appleboy/ssh-action@v0.1.4
#        with:
##          github_token: ${{secrets.TOKEN}}
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.EC2_KEY }}
#          port: ${{ secrets.EC2_PORT }}
#          script: |
#            cd /home/ubuntu
#            rm -rf chalna-server-0.0.1-SNAPSHOT.jar
#
#            mv spring-boot-app-*.jar /home/ubuntu/chalna-server-0.0.1-SNAPSHOT.jar
#
#            # 환경 변수 설정
#            export DB_HOST=${{ secrets.DB_HOST }}
#            export DB_PORT=${{ secrets.DB_PORT }}
#            export DB_NAME=${{ secrets.DB_NAME }}
#            export DB_USERNAME=${{ secrets.DB_USERNAME }}
#            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
#            export CLIENT_ID=${{ secrets.CLIENT_ID }}
#            export CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
#            export JWT_SECRET=${{ secrets.JWT_SECRET }}
#            export REDIS_HOST=${{ secrets.REDIS_HOST }}
#            export REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
#            export REDIS_POST=${{ secrets.REDIS_PORT }}
#            export FIREBASE_SERVICE_ACCOUNT_KEY="/home/ubuntu/firebase-config.json"
#
#            # JVM 옵션 설정
#            export JAVA_OPTS="-Duser.timezone=Asia/Seoul"
#            # 기존 실행 중인 애플리케이션 종료 (선택 사항)
#            pkill -f 'java -jar /home/ubuntu/chalna-server-0.0.1-SNAPSHOT.jar'
#            # 새로운 애플리케이션 시작
#            nohup java -jar $JAVA_OPTS /home/ubuntu/chalna-server-0.0.1-SNAPSHOT.jar > /dev/null 2>&1 &
